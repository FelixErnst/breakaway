if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
result$full <- lm1
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly)
chao_bunge <- function(data, cutoff=10) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
result$full <- lm1
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly)
chao_bunge <- function(data, cutoff=10, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
result$full <- lm1
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly)
chao_bunge <- function(data, cutoff=10, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
diversity_se <- 0
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
result$full <- lm1
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly)
chao_bunge(butterfly, 15)
ChaoBunge(butterfly, 15)
chao_bunge <- function(data, cutoff=10, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
diversity_se <- NA
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
result$full <- lm1
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly, 10)
chao_bunge(butterfly, 15)
chao_bunge <- function(data, cutoff=10, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
## standard error is to be made available in version 3.1; please contact the author with requests
diversity_se <- NA
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly, 10, answers = T)
chao_bunge <- function(data, cutoff=10, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
## standard error is to be made available in version 3.1; please contact the author with requests
diversity_se <- NA
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result <- list()
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly, 10, answers = T)
chao_bunge <- function(data, cutoff=10, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
n <- sum(frequency_index)
d_a <- sum(data[data[,1]>cutoff,2])
k <- 2:cutoff
m <- 1:cutoff
numerator <- frequency_index[k]
denominator <- 1-f1*sum(m^ 2*frequency_index[m])/(sum(m*frequency_index[m]))^ 2
diversity  <- d_a + sum(numerator /denominator)
f0 <- diversity - sum(frequency_index)
## standard error is to be made available in version 3.1; please contact the author with requests
diversity_se <- NA
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result <- list()
result$name <- "Chao-Bunge"
result$est <- diversity
result$seest <- as.vector(diversity_se)
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao_bunge(butterfly, 10, answers = T)
chao1 <- function(data, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
f2 <- frequency_index[2]
n <- sum(frequency_index)
f0 <- f1^2/(2*f2)
diversity <- n + f0
diversity_se <- f2*(0.5*(f1/f2)^2 + (f1/f2)^3 + 0.25*(f1/f2)^4)
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result <- list()
result$name <- "Chao1"
result$est <- diversity
result$seest <- diversity_se
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao1(butterfly)
chao1 <- function(data, print=TRUE, answers=FALSE) {
if( !(is.matrix(data) || is.data.frame(data))) {
filename <- data
ext <- substr(filename, nchar(filename)-2, nchar(filename))
if (ext == "csv") {
data <- read.table(file=filename, header=0,sep=",")
if( data[1,1] !=1) data <- read.table(filename, header=1,sep=",")
} else if (ext == "txt") {
data <- read.table(file=filename, header=0)
} else cat("Please input your data as a txt or csv file,
or as an R dataframe or matrix.")
}
if ( is.factor(data[,1]) ) {
fs <- as.numeric(as.character(data[,1]))
data <- cbind(fs,data[,2])
data <- data[data[,1]!=0,]
}
index  <- 1:max(data[,1])
frequency_index <- rep(0, length(index))
frequency_index[data[,1]] <- data[,2]
f1  <- frequency_index[1]
f2 <- frequency_index[2]
n <- sum(frequency_index)
f0 <- f1^2/(2*f2)
diversity <- n + f0
diversity_se <- sqrt(f2*(0.5*(f1/f2)^2 + (f1/f2)^3 + 0.25*(f1/f2)^4))
if(print) {
cat("################## Chao-Bunge ##################\n")
cat("\tThe best estimate of total diversity is", round(diversity),
"\n \t with std error",round(diversity_se),"\n")
}
if(answers) {
result <- list()
result$name <- "Chao1"
result$est <- diversity
result$seest <- diversity_se
d <- exp(1.96*sqrt(log(1+result$seest^2/f0)))
result$ci <- c(n+f0/d,n+f0*d)
return(result)
}
}
chao1(butterfly)
chao_bunge(butterfly, 10, answers = T)
chao_bunge(apples)
chao1(butterfly, answers = T)
library(breakaway)
chao1(butterfly, answers = T)
library(breakaway)
library(breakaway)
library(breakaway)
library(breakaway)
library(breakaway)
From Writing R Extensions
The test of cyclic declarations in DESCRIPTION files needs repositories (including CRAN) set: do this in ~/.Rprofile, by e.g
options(repos = c(CRAN="http://cran.r-project.org"))
Recommended
User should double check if his .Rprofile is in his home and that it contains the mentioned option.
# in R session (any platform)
# where is my profile?
file.path(Sys.glob("~"),".Rprofile")
# is it there?
file.exists(file.path(Sys.glob("~"),".Rprofile"))
getwd()
file.path(Sys.glob("~"),".Rprofile")
file.exists(file.path(Sys.glob("~"),".Rprofile"))
library(breakaway)
library(breakaway)
Sys.setenv()
Sys.setenv
library(breakaway)
library(breakaway)
tools::package_dependencies(reverse = TRUE)
mine <- read.csv("/Users/adw96/Documents/Research w Bunge/4th paper - beta diversity/Nature methods/NM submission files/whitman-data.csv")
the <- read.txt("/Users/adw96/Downloads/otu_table_csingletons_no211_meta.txt")
the <- read.table("/Users/adw96/Downloads/otu_table_csingletons_no211_meta.txt")
mine[1:5,1:5]
the[1:5,1:5]
mine_list <- apply(mine, 2, table)
the_list <- apply(the, 2, table)
names(mine_list)
names(the_list)
the[1:5,1:5]
the <- read.table("/Users/adw96/Downloads/otu_table_csingletons_no211_meta.txt", header = T)
the[1:5,1:5]
the <- read.table("/Users/adw96/Downloads/otu_table_csingletons_no211_meta.txt", header = F)
the[1:5,1:5]
the <- read.table("/Users/adw96/Downloads/otu_table_csingletons_no211_meta.txt", header = F)
the[1:5,1:5]
the <- read.table("/Users/adw96/Downloads/otu_table_csingletons_no211_meta.txt", header = T)
the[1:5,1:5]
mine_list <- apply(mine, 2, table)
the_list <- apply(the, 2, table)
names(mine_list)
names(the_list)
my_list$S009
mine_list$S009
the_list$S009
library("breakaway", lib.loc="~/Library/R/3.2/library")
as.matrix(mine_list$S009)
as.matrix(mine_list$S009)[-1,]
as.matrix(mine_list$S009[-1])e
as.matrix(mine_list$S009[-1])
breakaway(as.matrix(mine_list$S009[-1]))
names(as.matrix(mine_list$S009[-1]))
rownames(as.matrix(mine_list$S009[-1]))
as.numeric(rownames(as.matrix(mine_list$S009[-1])))
cbind(as.numeric(rownames(as.matrix(mine_list$S009[-1]))), as.matrix(mine_list$S009[-1]))
mine1 <- cbind(as.numeric(rownames(as.matrix(mine_list$S009[-1]))), as.matrix(mine_list$S009[-1]))
breakaway(mine1)
the1 <- cbind(as.numeric(rownames(as.matrix(the_list$S009[-1]))), as.matrix(the_list$S009[-1]))
breakaway(the1, plot=F)
head(mine1)
head(the1)
names(mine_list)
names(the_list)
mine2 <- cbind(as.numeric(rownames(as.matrix(mine_list$S222[-1]))), as.matrix(mine_list$S222[-1]))
the2 <- cbind(as.numeric(rownames(as.matrix(the_list$S222[-1]))), as.matrix(the_list$S222[-1]))
head(mine2)
head(the2)
getwd()
