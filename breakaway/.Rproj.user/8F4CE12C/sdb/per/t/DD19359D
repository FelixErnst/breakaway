{
    "collab_server" : "",
    "contents" : "## Load code, files; turn OTU tables into frequency count lists\nmywd <- \"\"\nsetwd(mywd)\n\n## Install nec software, load function\n## Need to have CatchAll (and mono) available for the medium-diversity analyses\ninstall.packages(\"breakaway\")\nrequire(breakaway)\nrm(betta); rm(betta_random)\nsource(\"betta-code.R\")\n\n## Dethlefsen data; available at\n## http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.0060280#s5\notu_deth <- read.csv(\"dethlefsen-data.csv\")\nrownames(otu_deth) <- otu_deth[,1]\notu_deth <- otu_deth[,2:19] ## delete classification info\nfreq_deth <- as.data.frame(table(otu_deth[,1]))\nfreq_deth <- freq_deth[freq_deth[,1]!=0,]\n\n## Whitman data; available at the NCBI SRA under accession number SRP072444\n## http://www.ncbi.nlm.nih.gov/sra\notu_whitman <- read.csv(\"whitman-data.csv\")\nrownames(otu_whitman) <- otu_whitman[,1]\notu_whitman <- otu_whitman[,-1]\notu_whitman <- as.matrix(otu_whitman)\nfreq_whitman <- as.data.frame(table(otu_whitman[,1]))\nfreq_whitman <- freq_whitman[freq_whitman[,1]!=0,]\nmetadata_whitman <- read.csv(\"whitman-metadata.csv\")\nattach(metadata_whitman)\n\n#### Simulations are uniform in size, set iterations parameter here\n## About 13 seconds each = 72 hours = 3 days\nt1 <- proc.time()\nmy_iterations  <- 20000\n\n#################################################################################\n#################################### Table 1 ####################################\n#################################################################################\nreal_subs_whitman <- function(freq, its, nlower, nupper) {\n  outputs <- matrix(NA,nrow=its,ncol=3)\n  organisms <- as.numeric(as.character(rep(freq[,1],freq[,2])))\n  names(organisms) <- paste(\"Org\",1:length(organisms),sep=\"\")\n  orgs_pr <- organisms/sum(organisms)\n  ns <- round(runif(its, nlower, nupper))\n  for (k in 1:its) {\n    my_sub <- sample(names(organisms), ns[k], prob=orgs_pr, replace=T)\n    tmp <- cbind(as.numeric(names(table(table(my_sub)))),as.numeric(table(table(my_sub))))\n    run <- breakaway::breakaway(tmp,answers=1,plot=0,print=0)\n    baway_results <- c(run$est,run$seest)\n    n_results <- sum(tmp[,2])\n    try(outputs[k, 1:2] <- baway_results, silent=T)\n    try(outputs[k, 3] <- n_results, silent=T)\n    if (k %% 5000 == 0) cat(\"k is\", k, \"\\n\")\n  }\n  colnames(outputs) <- c(\"breakaway est\", \"breakaway se\", \"obs\")\n  return(outputs)\n}\n\ndisplay_function_whitman <- function(simulated, outly=5) {\n  tab3 <- matrix(NA,nrow=2, ncol=6); rownames(tab3) <- c(\"betta\", \"n\")\n  colnames(tab3) <- c(\"dps10, 0.01\", \"dps10, 0.05\", \"dps10, 0.10\", \"dps20, 0.01\", \"dps20, 0.05\", \"dps20, 0.10\")\n  for (dps in c(10,20)) {\n    tests <- dim(simulated)[1]/dps\n    p_baway <- rep(NA,tests); p_none <- rep(NA, tests)\n    X <- cbind(rep(1,dps), seq(ifelse(dps==10, 10, 5), 100, length=dps))\n    for (i in 1:tests) {\n      range <- (i*dps-(dps-1)):(i*dps)\n      mysubset_baway <- simulated[range,1:2]\n      mysubset_baway[mysubset_baway[,2]/mysubset_baway[,1]*100 < outly, ] <- NA\n      mysubset_obs <- simulated[range,3]\n      p_baway[i] <- try(betta(mysubset_baway[,1],mysubset_baway[,2],X)$table[2,3],silent=T)\n      p_none[i] <- summary(lm(mysubset_obs ~ X[,2]))$coef[2,4]\n    }\n    p_baway <- as.numeric(p_baway); p_none <- as.numeric(p_none)\n    for (alpha_ind in 1:3) {\n      alpha <- c(0.01, 0.05, 0.10)[alpha_ind]\n      tab3[,3*dps/10+alpha_ind-3] <- round(c(mean(p_baway<alpha,na.rm=T), mean(p_none<alpha,na.rm=T)),3)\n    }\n  }\n  apply(tab3, 1, function(x) cat(c(\" & (\", x[1], \",\", x[2], \",\", x[3], \") & (\", x[4], \",\", x[5], \",\", x[6], \") \\\\\", \"\\\\\", \"\\n\"), sep=\"\"))\n}\n\nns <- apply(otu_whitman, 2, sum); range(ns) ## range is ~10,000 to 200,000\n\n## iterations about 0.76 s/each\n## seed 1 for table 1\nset.seed(1)\nwhitman_table1a <- real_subs_whitman(freq_whitman, my_iterations, 1e4, 2e5) ## 4.5 hours\ndisplay_function_whitman(whitman_table1a, outly=5)\n\n\n#################################################################################\n#################################### Table 2 ####################################\n#################################################################################\nreal_subs_deth <- function(freq, its, nlower, nupper) {\n  outputs <- matrix(NA,nrow=its,ncol=3)\n  organisms <- as.numeric(as.character(rep(freq[,1],freq[,2])))\n  names(organisms) <- paste(\"Org\",1:length(organisms),sep=\"\")\n  orgs_pr <- organisms/sum(organisms)\n  ns <- round(runif(its, nlower, nupper))\n  for (k in 1:its) {\n    my_sub <- sample(names(organisms), ns[k], prob=orgs_pr,replace=T)\n    tmp <- cbind(as.numeric(names(table(table(my_sub)))),as.numeric(table(table(my_sub))))\n    write.table(tmp,paste(mywd,\"/temp_catchall.csv\",sep=\"\"),sep=\",\",row.names = FALSE,col.names = FALSE)\n    system(\"mono ./CatchAllCmdL.exe temp_catchall.csv temp_catchall 0 >/dev/null\")\n    catchall_results <- c(as.numeric(data.matrix(read.csv(paste(mywd,\"temp_catchall/temp_catchall_BestModelsAnalysis.csv\",sep=\"\"))[1,4])),\n                          as.numeric(data.matrix(read.csv(paste(mywd,\"temp_catchall/temp_catchall_BestModelsAnalysis.csv\",sep=\"\"))[1,5])))\n    n_results <- sum(tmp[,2])\n    try(outputs[k,1:2] <- catchall_results, silent=T)\n    try(outputs[k,3] <- n_results, silent=T)\n    if (k %% 5000 == 0) cat(\"k is\", k, \"\\n\")\n  }\n  colnames(outputs) <- c(\"catchall est\", \"catchall se\", \"obs\")\n  return(outputs)\n}\n\ndisplay_function_deth <- function(simulated, outly=1) {\n  tab3 <- matrix(NA,nrow=2,ncol=6); rownames(tab3) <- c(\"betta\", \"n\")\n  colnames(tab3) <- c(\"dps10, 0.01\", \"dps10, 0.05\", \"dps10, 0.10\", \"dps20, 0.01\", \"dps20, 0.05\", \"dps20, 0.10\")\n  x10p <- as.factor(c(rep(\"A\",5), rep(\"B\",5))); X10 <- model.matrix(lm(rnorm(10)~x10p))[1:10,]\n  x20p <- as.factor(c(rep(\"A\",10), rep(\"B\",10))); X20 <- model.matrix(lm(rnorm(20)~x20p))[1:20,]\n  for (dps in c(10,20)) {\n    tests <- dim(simulated)[1]/dps\n    p_baway <- rep(NA,tests); p_catchall <- rep(NA,tests); p_chao <- rep(NA, tests); p_chao_reg <- rep(NA, tests); p_none <- rep(NA, tests)\n    if (dps==10) {\n      X <- X10; xp <- x10p\n    } else {\n      X <- X20; xp <- x20p\n    }\n    for (i in 1:tests) {\n      range <- (i*dps-(dps-1)):(i*dps)\n      mysubset_catchall <- simulated[range,1:2]\n      mysubset_catchall[mysubset_catchall[,2]/mysubset_catchall[,1]*100 < outly, ] <- NA\n      mysubset_obs <- simulated[range,3]\n      p_catchall[i] <- try(betta(mysubset_catchall[,1],mysubset_catchall[,2],X)$table[2,3],silent=T)\n      p_none[i] <- summary(lm(mysubset_obs ~ xp))$coef[2,4]\n    }\n    p_catchall <- as.numeric(p_catchall); p_none <- as.numeric(p_none)\n    for (alpha_ind in 1:3) {\n      alpha <- c(0.01, 0.05, 0.10)[alpha_ind]\n      tab3[,3*dps/10+alpha_ind-3] <- round(c(mean(p_catchall<alpha, na.rm=T), mean(p_none<alpha,na.rm=T)),3)\n    }\n  }\n  apply(tab3, 1, function(x) cat(c(\" & (\", x[1], \",\", x[2], \",\", x[3], \") & (\", x[4], \",\", x[5], \",\", x[6], \") \\\\\", \"\\\\\", \"\\n\"), sep=\"\"))\n  cat(\"\\n \\n\")\n}\n\n## iterations about 6.3s each = 33 hours\nsystem(\"mkdir temp_catchall\")\nset.seed(2)\ndeth_table1a <- real_subs_deth(freq_deth, my_iterations, 1e4, 3e4)\ndisplay_function_deth(deth_table1a, outly=1)\nsystem(\"rm -r temp_catchall\")\nsystem(\"rm -r temp_catchall.csv\")\n\n#################################################################################\n#################################### Table 3 ####################################\n#################################################################################\nchange_rich_whitman <- function(freq, upscale = 0.2, covnums=20, nlower, nupper) {\n  outputs <- matrix(NA,nrow=covnums,ncol=3)\n  organisms <- as.numeric(as.character(rep(freq[,1],freq[,2])))\n  names(organisms) <- paste(\"Org\",1:length(organisms),sep=\"\")\n  orgs_pr <- organisms/sum(organisms)\n  ns <- round(runif(covnums, nlower, nupper))\n  for (k in 1:covnums) {\n    new_orgs <- rep(NA, round(sum(freq[,2])*upscale*k/covnums))\n    new_orgs <- rep(min(orgs_pr),length(new_orgs))\n    names(new_orgs) <- paste(\"Org\", length(organisms)+(1:length(new_orgs)),sep=\"\")\n    my_sub <- sample(c(names(organisms), names(new_orgs)), ns[k], prob=c(orgs_pr, new_orgs),replace=T)\n    tmp <- cbind(as.numeric(names(table(table(my_sub)))),as.numeric(table(table(my_sub))))\n    run <- breakaway::breakaway(tmp,answers=1,plot=0,print=0)\n    baway_results <- c(run$est,run$seest)\n    n_results <- sum(tmp[,2])\n    try(outputs[k,1:2] <- baway_results, silent=T)\n    try(outputs[k,3] <- n_results, silent=T)\n    if (k %% 5000 == 0) cat(\"k is\", k, \"\\n\")\n  }\n  colnames(outputs) <- c(\"breakaway est\", \"breakaway se\", \"obs\")\n  return(outputs)\n}\n\n## collect powers\nget_ps_whitman <- function(mytables, nlower, nupper, X1) {\n  reps20 <- length(mytables)\n  tab3 <- matrix(NA,nrow=2,ncol=6); rownames(tab3) <- c(\"b\", \"n\")\n  colnames(tab3) <- c(\"dps10, 0.01\", \"dps10, 0.05\", \"dps10, 0.10\",\n                      \"dps20, 0.01\", \"dps20, 0.05\", \"dps20, 0.10\")\n  pvs10 <- matrix(NA, ncol=2, nrow=2*reps20)\n  pvs20 <- matrix(NA, ncol=2, nrow=reps20)\n  for (i in 1:reps20) {\n    X <- cbind(1, X1)\n    simulated <- mytables[[i]]\n    mysubset_baway <- simulated[,1:2]\n    mysubset_baway[mysubset_baway[,2]/mysubset_baway[,1]*100 < 5, ] <- NA\n    mysubset_obs <- simulated[,3]\n    pvs20[i, 1] <- try(betta(mysubset_baway[,1],mysubset_baway[,2],X)$table[2,3],silent=T)\n    pvs20[i, 2] <- summary(lm(mysubset_obs ~ X[,2]))$coef[2,4]\n    for (pp in 0:1) {\n      range <- 10*pp + 1:10\n      mysubset_baway <- simulated[range,1:2]\n      mysubset_baway[mysubset_baway[,2]/mysubset_baway[,1]*100 < 5, ] <- NA\n      mysubset_obs <- simulated[range,3]\n      X2 <- X[range,]\n      pvs10[i*2+pp-1, 1] <- try(betta(mysubset_baway[,1],mysubset_baway[,2],X2)$table[2,3],silent=T)\n      pvs10[i*2+pp-1, 2] <- summary(lm(mysubset_obs ~ X2[,2]))$coef[2,4]\n    }\n  }\n  tab3[,1] <- apply(pvs10, 2, function(x) { round(mean(x<0.01, na.rm=T),3) })\n  tab3[,2] <- apply(pvs10, 2, function(x) { round(mean(x<0.05, na.rm=T),3) })\n  tab3[,3] <- apply(pvs10, 2, function(x) { round(mean(x<0.10, na.rm=T),3) })\n  tab3[,4] <- apply(pvs20, 2, function(x) { round(mean(x<0.01, na.rm=T),3) })\n  tab3[,5] <- apply(pvs20, 2, function(x) { round(mean(x<0.05, na.rm=T),3) })\n  tab3[,6] <- apply(pvs20, 2, function(x) { round(mean(x<0.10, na.rm=T),3) })\n  apply(tab3, 1, function(x) cat(c(\" & (\", x[1], \",\", x[2], \",\", x[3], \") & (\", x[4], \",\", x[5], \",\", x[6], \") \\\\\", \"\\\\\", \"\\n\"), sep=\"\"))\n}\n\n## about 15 seconds each\nnsamps <- my_iterations/20\ntables_whitman_power <- list()\nset.seed(3)\nfor (i in 1:nsamps) {\n  tables_whitman_power[[i]] <- change_rich_whitman(freq_whitman, upscale = 0.2, covnums=20, 1e4, 2e5)\n  if (i %% 500 == 0) {\n    cat(\"Current i is\", i, \"of\", nsamps, \"\\n\")\n  }\n}\nget_ps_whitman(tables_whitman_power, 1e4, 2e5, seq(from=5, to=100, length=20))\n\n#################################################################################\n#################################### Table 4 ####################################\n#################################################################################\nchange_rich_disc <- function(freq, upscale = 0.2, its, nlower, nupper) {\n  outputs <- matrix(NA,nrow=its,ncol=3)\n  organisms <- as.numeric(as.character(rep(freq[,1],freq[,2])))\n  names(organisms) <- paste(\"Org\",1:length(organisms),sep=\"\")\n  orgs_pr <- organisms/sum(organisms)\n  ns <- round(runif(its, nlower, nupper))\n  for (i in 1:its) {\n    new_orgs <- rep(NA, round(sum(freq[,2])*upscale))\n    new_orgs <- rep(min(orgs_pr),length(new_orgs))\n    names(new_orgs) <- paste(\"Org\", length(organisms)+(1:length(new_orgs)),sep=\"\")\n    my_sub <- sample(c(names(organisms), names(new_orgs)), ns[i], prob=c(orgs_pr, new_orgs),replace=T)\n    tmp <- cbind(as.numeric(names(table(table(my_sub)))),as.numeric(table(table(my_sub))))\n    write.table(tmp,paste(getwd(),\"/temp_catchall.csv\",sep=\"\"),sep=\",\",row.names = FALSE,col.names = FALSE)\n    system(\"mono ./CatchAllCmdL.exe temp_catchall.csv temp_catchall 0 >/dev/null\")\n    myread <- read.csv(paste(getwd(),\"/temp_catchall/temp_catchall_BestModelsAnalysis.csv\",sep=\"\"))\n    catchall_results <- c(as.numeric(data.matrix(myread[1,4])),\n                          as.numeric(data.matrix(myread[1,5])))\n    n_results <- sum(tmp[,2])\n    try(outputs[i,1:2] <- catchall_results, silent=T)\n    try(outputs[i,3] <- n_results, silent=T)\n    if (i %% 5000 == 0) cat(\"k is\", i, \"\\n\")\n  }\n  colnames(outputs) <- c(\"catchall est\", \"catchall se\", \"obs\")\n  return(outputs)\n}\n\nget_ps_disc <- function(tab0, tab2) {\n  n10s <- dim(tab0)[1]/5; n20s <- dim(tab0)[1]/10\n  tab3 <- matrix(NA,nrow=2,ncol=6); rownames(tab3) <- c(\"ca\", \"n\")\n  colnames(tab3) <- c(\"dps10, 0.01\", \"dps10, 0.05\", \"dps10, 0.10\",\n                      \"dps20, 0.01\", \"dps20, 0.05\", \"dps20, 0.10\")\n  pvs10 <- matrix(NA, ncol=2, nrow=n10s); pvs20 <- matrix(NA, ncol=2, nrow=n20s)\n  for (i in 1:n20s) {\n    simulated <- rbind(tab0[i*10 - (10:1) + 1, ], tab2[i*10 - (10:1) + 1, ])\n    xp <- as.factor(c(rep(\"A\", 10), rep(\"B\", 10)))\n    X <- model.matrix(lm(rnorm(length(xp))~xp))\n    mysubset_catchall <- simulated[,1:2]\n    mysubset_catchall[mysubset_catchall[,2]/mysubset_catchall[,1]*100 < 1, ] <- NA\n    mysubset_obs <- simulated[,3]\n    pvs20[i, 1] <- try(betta(mysubset_catchall[,1],mysubset_catchall[,2],X)$table[2,3],silent=T)\n    pvs20[i, 2] <- summary(lm(mysubset_obs ~ xp))$coef[2,4]\n  }\n  for (i in 1:n10s) {\n    simulated <- rbind(tab0[i*5 - (5:1) + 1, ], tab2[i*5 - (5:1) + 1, ])\n    xp <- as.factor(c(rep(\"A\", 5), rep(\"B\", 5)))\n    X <- model.matrix(lm(rnorm(length(xp))~xp))\n    mysubset_catchall <- simulated[,1:2]\n    mysubset_catchall[mysubset_catchall[,2]/mysubset_catchall[,1]*100 < 1, ] <- NA\n    mysubset_obs <- simulated[,3]\n    pvs10[i, 1] <- try(betta(mysubset_catchall[,1],mysubset_catchall[,2],X)$table[2,3],silent=T)\n    pvs10[i, 2] <- summary(lm(mysubset_obs ~ xp))$coef[2,4]\n  }\n  tab3[,1] <- apply(pvs10, 2, function(x) { x <- as.numeric(x); round(mean(x<0.01, na.rm=T),3) } )\n  tab3[,2] <- apply(pvs10, 2, function(x) { x <- as.numeric(x); round(mean(x<0.05, na.rm=T),3) } )\n  tab3[,3] <- apply(pvs10, 2, function(x) { x <- as.numeric(x); round(mean(x<0.10, na.rm=T),3) } )\n  tab3[,4] <- apply(pvs20, 2, function(x) { x <- as.numeric(x); round(mean(x<0.01, na.rm=T),3) } )\n  tab3[,5] <- apply(pvs20, 2, function(x) { x <- as.numeric(x); round(mean(x<0.05, na.rm=T),3) } )\n  tab3[,6] <- apply(pvs20, 2, function(x) { x <- as.numeric(x); round(mean(x<0.10, na.rm=T),3) } )\n  apply(tab3, 1, function(x) cat(c(\" & (\", x[1], \",\", x[2], \",\", x[3], \") & (\", x[4], \",\", x[5], \",\", x[6], \") \\\\\", \"\\\\\", \"\\n\"), sep=\"\"))\n}\n\nset.seed(4)\nresamps_d_1 <- change_rich_disc(freq_deth, upscale=0.1, its = my_iterations, nlower = 10000, nupper = 30000) ## 5s each = 5.5 hours\nget_ps_disc(deth_table1a, resamps_d_1)\nsystem(\"rm -r temp_catchall\")\nsystem(\"rm -r temp_catchall.csv\")\n\n#################################################################################\n#################################### Table 5 ####################################\n#################################################################################\n\n##### Size\nhom <- function(simulated, outly) {\n  simulated[simulated[,2]/simulated[,1]*100 < outly, ] <- NA\n  quantile_homog <- list()\n  quantile_homog[[1]] <- rep(NA, dim(simulated)[1]/10)\n  quantile_homog[[2]] <- rep(NA, dim(simulated)[1]/20)\n  for (dps in c(10,20)) {\n    tests <- dim(simulated)[1]/dps\n    for (i in 1:tests) {\n      range <- (i*dps-(dps-1)):(i*dps)\n      quantile_homog[[dps/10]][i] <- try(betta(simulated[range,1], simulated[range,2])$homogeneity[2],silent=T)\n    }\n  }\n  lapply(quantile_homog, as.numeric)\n}\n\nw_r <- hom(whitman_table1a, outly=5)\nround(c(mean(w_r[[1]]<0.01, na.rm=T), mean(w_r[[1]]<0.05, na.rm=T), mean(w_r[[1]]<0.1, na.rm=T)), 3)\nround(c(mean(w_r[[2]]<0.01, na.rm=T), mean(w_r[[2]]<0.05, na.rm=T), mean(w_r[[2]]<0.1, na.rm=T)), 3)\n\nd_r <- hom(deth_table1a, outly=1)\nround(c(mean(d_r[[1]]<0.01, na.rm=T), mean(d_r[[1]]<0.05, na.rm=T), mean(d_r[[1]]<0.1, na.rm=T)), 3)\nround(c(mean(d_r[[2]]<0.01, na.rm=T), mean(d_r[[2]]<0.05, na.rm=T), mean(d_r[[2]]<0.1, na.rm=T)), 3)\n\n## Compare s.d.'s and s.e.'s\nc(mad(deth_table1a[,1], na.rm=T), median(deth_table1a[,2],na.rm=T))\nc(mad(whitman_table1a[,1], na.rm=T), median(whitman_table1a[,2],na.rm=T))\n\n## Power\nhom_p <- function(sim1, sim2, outly=0) {\n  sim1[sim1[,2]/sim1[,1]*100 < outly, ] <- NA\n  sim2[sim2[,2]/sim2[,1]*100 < outly, ] <- NA\n  quantile_homog <- list()\n  quantile_homog[[1]] <- rep(NA, dim(sim1)[1]/5)\n  quantile_homog[[2]] <- rep(NA, dim(sim1)[1]/10)\n  for (dps in c(5,10)) {\n    tests <- dim(sim1)[1]/dps\n    for (i in 1:tests) {\n      range <- (i*dps-(dps-1)):(i*dps)\n      quantile_homog[[dps/5]][i] <- try(betta(c(sim1[range,1],c(sim2[range,1])), c(sim1[range,2], sim2[range,2]))$homogeneity[2],silent=T)\n    }\n  }\n  lapply(quantile_homog, as.numeric)\n}\n\nd_p <- hom_p(deth_table1a, resamps_d_1)\nround(c(mean(d_p[[1]]<0.01, na.rm=T), mean(d_p[[1]]<0.05, na.rm=T), mean(d_p[[1]]<0.1, na.rm=T)), 3)\nround(c(mean(d_p[[2]]<0.01, na.rm=T), mean(d_p[[2]]<0.05, na.rm=T), mean(d_p[[2]]<0.1, na.rm=T)), 3)\n\n## Power to detect difference\nhom_p_w <- function(siml, outly=0, cols=c(1,2)) {\n  quantile_homog <- list(); quantile_homog[[1]] <- rep(NA, length(siml)); quantile_homog[[2]] <- rep(NA, 2*length(siml))\n  for (i in 1:(length(siml))) {\n    dps <- 20\n    ests <- siml[[i]][, cols]\n    ests[ests[,2]/ests[,1]*100 < outly, ] <- NA\n    quantile_homog[[1]][i] <- try(betta(ests[,1], ests[,2])$homogeneity[2],silent=T)\n    dps <- 10\n    for (j in 1:2) {\n      range <- (j*dps-(dps-1)):(j*dps)\n      ests <- siml[[i]][range, cols]\n      ests[ests[,2]/ests[,1]*100 < outly, ] <- NA\n      quantile_homog[[2]][i] <- try(betta(ests[,1], ests[,2])$homogeneity[2],silent=T)\n    }\n  }\n  lapply(quantile_homog, as.numeric)\n}\n\nhpw <- hom_p_w(tables_whitman_power)\nround(c(mean(hpw[[2]]<0.01, na.rm=T), mean(hpw[[2]]<0.05, na.rm=T), mean(hpw[[2]]<0.1, na.rm=T)), 3)\nround(c(mean(hpw[[1]]<0.01, na.rm=T), mean(hpw[[1]]<0.05, na.rm=T), mean(hpw[[1]]<0.1, na.rm=T)), 3)\n\n#################################################################################\n#################################### Figure 1 ###################################\n#################################################################################\nfreq_list_whitman <- apply(otu_whitman, 2, function(x) as.data.frame(table(x)))\nfreq_list_whitman <- lapply(freq_list_whitman, function(x) x[x[,1]!=0,])\n\nDay <- as.factor(Day)\nAmdmt <- as.factor(Amdmt)\n\nns_whitman <- unlist(lapply(freq_list_whitman, function(x) sum(x[,2])))\n\nbreakaway_whitman <- matrix(NA,nrow=length(freq_list_whitman),ncol=4)\nrownames(breakaway_whitman) <- names(freq_list_whitman)\ncolnames(breakaway_whitman) <- c(\"baway_est\",\"baway_seest\",\"baway_lcb\",\"baway_ucb\")\nfor (i in 1:length(freq_list_whitman)) {\n  baway <- try(breakaway::breakaway(freq_list_whitman[[i]],plot=FALSE,print=FALSE,answers=TRUE),silent=T)\n  if(class(try(baway$est==0,silent=1))!=\"try-error\") { # if it works, store it\n    breakaway_whitman[i,1] <- baway$est\n    breakaway_whitman[i,2] <- baway$seest\n    breakaway_whitman[i,3:4] <- baway$ci\n  }\n}\n\nsample_d0_a0 <- Day==0 & Amdmt == 0 & breakaway_whitman[,2]/breakaway_whitman[,1] > 0.01\nests_d0_a0 <- breakaway_whitman[sample_d0_a0,]\nns_d0_a0 <- ns_whitman[sample_d0_a0]\n\nrange(ests_d0_a0[,1]/ns_d0_a0)\n\nbetta(ests_d0_a0[,1], ests_d0_a0[,2])$table\nbetta(ests_d0_a0[,1], ests_d0_a0[,2])$homogeneity ## homogeneous!\n\npdf(\"nm_fig1.pdf\", height=5, width=6)\npar(mfrow=c(1,1))\nz_t <- qnorm(0.975, 0, 1); ylim_t1 <- 1000; ylim_t2 <- 7000\nplot(0,0,type=\"n\",bty=\"n\",main=\"\",\n     xlab=\"Samples\",ylab=\"Estimates of species richness\",cex.lab=0.8,\n     xlim=c(0,length(ests_d0_a0[,1])+1),ylim=c(ylim_t1,ylim_t2))\nfor (i in 1:length((ns_d0_a0))) {\n  lines(c(rank(ns_d0_a0)[i],rank(ns_d0_a0)[i]),\n        c(max(0,ests_d0_a0[i,1]-z_t*ests_d0_a0[i,2], ns_d0_a0[i]),\n          min(ylim_t2,ests_d0_a0[i,1]+z_t*ests_d0_a0[i,2])))\n  points(rank(ns_d0_a0)[i],ests_d0_a0[i,1],pch=16,cex=0.8)\n  points(rank(ns_d0_a0)[i],ns_d0_a0[i],pch=1,cex=0.8)\n}\nlegend(6,2000, c(\"Observed richness\",\"Estimated total richness\",\"95% interval estimate of total richness\"),\n       pch=c(1,16, NA), lty=c(NA, NA, 1),cex=0.7,bty=\"o\",box.col = \"grey\")\ndev.off()\n\n#################################################################################\n#################################### Figure 2 ###################################\n#################################################################################\nfreq_list_deth <- apply(otu_deth, 2, function(x) as.data.frame(table(x)))\nfreq_list_deth <- lapply(freq_list_deth, function(x) x[x[,1]!=0,])\n\nsetwd(mywd)\nsystem(\"mkdir frequencytables\")\nsystem(\"cp runcatchall0.sh frequencytables\")\nsystem(\"cp CatchAllCmdL.exe frequencytables\")\nfor (i in 1:length(freq_list_deth)) {\n  tmp <- freq_list_deth[[i]]\n  col1 <- as.numeric(tmp[,1])\n  col2 <- as.numeric(tmp[,2])\n  freq_list_deth[[i]] <- cbind(col1,col2)\n  freqtable <- freq_list_deth[[i]]\n  write.table(freqtable,paste(mywd,\"/frequencytables/\",names(freq_list_deth)[i],\".csv\",sep=\"\"),sep=\",\",row.names = FALSE,col.names = FALSE)\n}\nsetwd(paste(mywd,\"frequencytables/\",sep = \"\"))\nsystem(\"./runcatchall0.sh\")\nsetwd(mywd)\ntxt.sources = paste(mywd,\"/\",list.files(pattern=\"*BestModelsAnalysis.csv\",recursive=T),sep=\"\")\nmyread <- function(x)  {\n  y <- read.csv(x,stringsAsFactors=FALSE)\n  return(as.numeric(y[1,4:7]))\n}\ncatchall_deth <- matrix(sapply(txt.sources,myread),byrow=TRUE,ncol=4)\nrownames(catchall_deth) <- sapply(strsplit(txt.sources,\"/\"),\"[\",11)\ncolnames(catchall_deth) <- c(\"catchall_est\",\"catchall_seest\",\"catchall_lcb\",\"catchall_ucb\")\n\nparticipant <- c(rep(\"A\",8),rep(\"B\",5),rep(\"C\",5))\ntreatment <- c(rep(\"prior\",4),rep(\"treatment\",2),rep(\"after\",2),\n               rep(c(rep(\"prior\",2),rep(\"treatment\",1),rep(\"after\",2)),2))\n\ntmt <- as.factor(treatment); tmt <- relevel(tmt, ref=\"prior\")\nxm_r <- model.matrix(lm(rnorm(18)~tmt))\nbetta_random(catchall_deth[,1], catchall_deth[,2], xm_r, participant)$table\n\nns_d <- unlist(lapply(freq_list_deth, function(x) sum(x[,2])))\n\npdf(\"nm_fig2.pdf\", height=5, width=6)\ncol_by_patient <- c(rep(\"blue\",8),rep(\"green\",5),rep(\"black\",5))\ncharacter_by_patient <- c(rep(0,8),rep(2,5),rep(5,5))\ncharacter_by_patient2 <- c(rep(15,8),rep(17,5),rep(18,5))\npar(xpd=T)\nplot(0,0,type=\"n\",main=\"\",xlim=c(0,19),ylim=c(0,2500),bty=\"n\",xaxt=\"n\",xlab=\"\",\n     ylab=\"Estimates of species richness\",cex.lab=0.8)\nz <- qnorm(0.975, 0, 1)\nfor (i in 1:18) {\n  points(i,catchall_deth[i,1],col=col_by_patient[i],pch=character_by_patient2[i],cex=0.6)\n  lines(c(i,i),c(catchall_deth[i,1]-z*catchall_deth[i,2],catchall_deth[i,1]+z*catchall_deth[i,2]),col=col_by_patient[i])\n  points(i,ns_d[i],col=col_by_patient[i],pch=character_by_patient[i], cex=0.5)\n}\nxaxs1 <- -250; xaxs2 <- xaxs1; xaxs3 <- -200; txth <- -100; txts <- 0.7; pth <- 2500\ntext(5,pth,\"Patient A\",col=\"blue\"); text(11,pth,\"Patient B\",col=\"green\");text(16,pth,\"Patient C\",col=\"black\")\nlines(c(0.75,4.25),c(xaxs1,xaxs1)); lines(c(0.75,0.75),c(xaxs2,xaxs3)); lines(c(4.25,4.25),c(xaxs2,xaxs3))\nlines(c(4.75,6.25),c(xaxs1,xaxs1));lines(c(4.75,4.75),c(xaxs2,xaxs3));lines(c(6.25,6.25),c(xaxs2,xaxs3))\nlines(c(6.75,8.25),c(xaxs1,xaxs1));lines(c(6.75,6.75),c(xaxs2,xaxs3));lines(c(8.25,8.25),c(xaxs2,xaxs3))\ntext(2.5,txth,\"PRE\",cex=txts);text(5.5,txth,\"TR\",cex=txts);text(7.5,txth,\"POST\",cex=txts)\nlines(c(8.75,10.25),c(xaxs1,xaxs1));lines(c(8.75,8.75),c(xaxs2,xaxs3));lines(c(10.25,10.25),c(xaxs2,xaxs3))\nlines(c(10.75,11.25),c(xaxs1,xaxs1));lines(c(10.75,10.75),c(xaxs2,xaxs3));lines(c(11.25,11.25),c(xaxs2,xaxs3))\nlines(c(11.75,13.25),c(xaxs1,xaxs1));lines(c(11.75,11.75),c(xaxs2,xaxs3));lines(c(13.25,13.25),c(xaxs2,xaxs3))\ntext(9.5,txth,\"PRE\",cex=txts);text(11,txth,\"TR\",cex=txts);text(12.5,txth,\"POST\",cex=txts)\nlines(c(13.75,15.25),c(xaxs1,xaxs1));lines(c(13.75,13.75),c(xaxs2,xaxs3));lines(c(15.25,15.25),c(xaxs2,xaxs3))\nlines(c(15.75,16.25),c(xaxs1,xaxs1));lines(c(15.75,15.75),c(xaxs2,xaxs3));lines(c(16.25,16.25),c(xaxs2,xaxs3))\nlines(c(16.75,18.25),c(xaxs1,xaxs1));lines(c(16.75,16.75),c(xaxs2,xaxs3));lines(c(18.25,18.25),c(xaxs2,xaxs3))\ntext(14.5,txth,\"PRE\",cex=txts);text(16,txth,\"TR\",cex=txts);text(17.5,txth,\"POST\",cex=txts)\nlegend(8, 500, c(\"Observed richness\",\"Estimated total richness\",\"95% interval estimate of total richness\"),\n       pch=c(1,16, NA), lty=c(NA, NA, 1),cex=0.7,col=\"dark grey\", bty=\"o\",box.col = \"grey\")\ndev.off()\n(proc.time()-t1)/my_iterations\n",
    "created" : 1459343589762.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "52720000",
    "id" : "DD19359D",
    "lastKnownWriteTime" : 1459348327,
    "last_content_update" : 1459348327093,
    "path" : "~/Documents/Research w Bunge/4th paper - beta diversity/Nature methods/NM submission files/tables.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}